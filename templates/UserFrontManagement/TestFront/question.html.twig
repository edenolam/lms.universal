{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
<link rel="stylesheet" href="{{ asset("css/TimeCircles.css")}}" /> 
{% endblock %}

{% block body %}
    <div class="lms-breadcrumb">
        <a href=" {% if is_granted('ROLE_APPRENANT') %} {{ path('home_dashboard') }} {% elseif is_granted('ROLE_TUTEUR') %} {{ path('dashboard_tuteur') }} {% elseif is_granted('ROLE_CONCEPTEUR') %} {{ path('sondage_view') }} {% elseif is_granted('ROLE_ADMIN') %} {{ path('admin_user_index') }} {% else %} {{ path('home_dashboard') }} {% endif %}">{{lms_name}} </a> </span> > <a href="{{path('user_formation')}}">{{'menu.userFormation.title'|trans}}</a> &gt; <a href="{{path('user_formation_module', {'slugSession' : currentSession.slug})}}">{{formationPath.title}}</a> > 
        {{moduleTest.module.title}}
         > <span>{{moduleTest.test.TypeTest.title}}</span>
    </div>

    <div class="d-flex flex-wrap lms-title">
        <h1 class="text-uppercase lms-h1">{{ formationPath.title }}:
            <span class="capitalize">{{formationPath.title}}</span>
        </h1>
        <div class="d-flex flex-wrap justify-content-end lms-subtitle">
            <hr>
            <!-- Indicateurs -->
            <div class="d-flex align-items-center lms-indicators">
                <div class="lms-indicators-item">
                    <svg viewBox="0 0 241.933 241.933" height=24 width=24 xmlns="http://www.w3.org/2000/svg"><g><path d="M213.937,85.577l-18.398-19.016l3.706-26.192c0.567-4.006-2.145-7.74-6.131-8.438l-26.058-4.568L154.652,3.986 c-1.896-3.573-6.287-4.999-9.919-3.222L120.969,12.38L97.199,0.764c-3.635-1.777-8.022-0.35-9.919,3.224L74.881,27.363 L48.82,31.931c-3.985,0.698-6.698,4.432-6.131,8.438l3.705,26.192L27.996,85.577c-2.813,2.908-2.813,7.522,0.001,10.43 l18.397,19.014l-3.705,26.206c-0.566,4.005,2.146,7.739,6.131,8.437l20.857,3.656v81.113c0,2.599,1.346,5.013,3.557,6.379 c1.204,0.745,2.572,1.121,3.943,1.121c1.146,0,2.295-0.262,3.354-0.792l40.439-20.212l40.433,20.212 c2.324,1.162,5.086,1.038,7.297-0.329c2.211-1.367,3.557-3.781,3.557-6.38v-81.111l20.858-3.658 c3.985-0.699,6.697-4.432,6.131-8.438l-3.706-26.206l18.397-19.013C216.749,93.1,216.749,88.485,213.937,85.577z M124.323,205.835 c-2.11-1.055-4.595-1.056-6.707,0l-32.939,16.464v-49.605l2.604,4.909c1.896,3.575,6.288,5,9.92,3.222l23.769-11.624l23.762,11.624 c1.06,0.518,2.184,0.764,3.291,0.764c2.69,0,5.286-1.454,6.63-3.985l2.604-4.905v49.6L124.323,205.835z M182.209,107.225 c-1.609,1.663-2.36,3.975-2.036,6.266l3.203,22.651l-22.521,3.949c-2.278,0.399-4.245,1.828-5.33,3.871l-10.721,20.2 l-20.539-10.047c-1.04-0.508-2.168-0.763-3.296-0.763c-1.128,0-2.256,0.254-3.295,0.763L97.13,164.162l-10.717-20.199 c-1.084-2.044-3.051-3.473-5.33-3.872l-22.526-3.949l3.202-22.652c0.324-2.29-0.427-4.603-2.036-6.265L43.822,90.791l15.902-16.436 c1.608-1.663,2.359-3.975,2.035-6.265l-3.202-22.637l22.526-3.949c2.279-0.399,4.246-1.829,5.331-3.873l10.717-20.205l20.545,10.04 c2.078,1.016,4.509,1.016,6.587,0l20.539-10.04l10.723,20.206c1.084,2.043,3.051,3.472,5.33,3.872l22.521,3.948l-3.203,22.637 c-0.324,2.291,0.427,4.603,2.035,6.266l15.902,16.436L182.209,107.225z"/><path d="M120.969,39.507c-28.283,0-51.293,23.006-51.293,51.285c0,28.285,23.01,51.296,51.293,51.296 c28.279,0,51.286-23.011,51.286-51.296C172.255,62.513,149.248,39.507,120.969,39.507z M120.969,127.088 c-20.012,0-36.293-16.282-36.293-36.296c0-20.008,16.281-36.285,36.293-36.285c20.008,0,36.286,16.277,36.286,36.285 C157.255,110.806,140.977,127.088,120.969,127.088z"/><path d="M136.258,71.765l-22.155,22.15l-8.431-8.421c-2.93-2.928-7.679-2.925-10.607,0.006c-2.927,2.931-2.924,7.679,0.007,10.606 l13.733,13.718c1.464,1.463,3.382,2.194,5.3,2.194c1.919,0,3.839-0.732,5.303-2.196l27.455-27.449 c2.93-2.928,2.93-7.677,0.001-10.607C143.936,68.837,139.187,68.836,136.258,71.765z"/></g></svg>
                    <span class="text uppercase">
                        {% if 'pre-test-valid' in validationModes %}
                            {{'validant'|trans}}
                        {% endif %}
                    </span>
                </div>
                <div class="lms-indicators-item">
                    <i class="material-icons lms-material-icons"> access_time </i>
                    <span class="">{{moduleTest.test.theoricalDuration|date("H:i:s")}}</span>
                </div>
                <div class="lms-indicators-item">
                    <i class="material-icons lms-material-icons"> calendar_today </i>
                    <span class="">
                        {% for mDate in currentSession.sessionFormationPathModules %}
                            {%  if mDate.module.id == module.id  %}
                                {% if moduleTest.test.typeTest.conditional == 'eval' %}
                                    {% if app.request.locale == "fr" %}
                                        {{ mDate.openingDateEvaluation|date("d/m/y") }} - {{ mDate.closingDateEvaluation|date('d/m/Y') }}
                                    {% else %} 
                                        {{mDate.openingDateEvaluation|date("y/m/d") }} - {{ mDate.closingDateEvaluation|date('y/m/d') }}
                                    {% endif %}
                                {% else %}
                                    {% if app.request.locale == "fr" %}
                                        {{ mDate.openingDate|date("d/m/y") }} - {{ mDate.closingDate|date('d/m/Y') }}
                                    {% else %} 
                                        {{mDate.openingDate|date("y/m/d") }} - {{ mDate.closingDate|date('y/m/d') }}
                                    {% endif %}
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    </span>
                </div>
                <div class="lms-indicators-item"> 
                    {% if moduleTest.test.TypeTest.conditional != 'training' %}
                        {% if userTest.numberTry > moduleTest.numberTry %}
                            {% set numberTry = userTest.numberTry %}
                        {% else %}
                            {% set numberTry = moduleTest.numberTry %}
                        {% endif %}
                        {% for i in 0..numberTry -1 %}
                            {% if i <= nbtentetiveDown %}
                                <span class="lms-icon-try done"></span>
                            {% else %}
                                <span class="lms-icon-try"></span>
                            {% endif %}
                        {% endfor %}
                    {% else %}
                        {% if nbtentetiveDown > 0 %}
                            <span class="lms-icon-try done"></span>
                            {#. {{nbtentetiveDown}} . #}
                        {% else %}
                            <span class="lms-icon-try"></span>
                            {# . 0 .#}
                        {% endif %}
                        <span class="lms-icon-try"></span>
                    {% endif %}
                    <span class="">
                        {{'userFrontManagement.test.tries'|trans}}
                    </span>
                </div>
                <div class="lms-indicators-item">
                    <i class="material-icons lms-material-icons"> school </i>
                    {# {% set percentage = (100 * moduleTest.score)/nbQuestionTotal %} #}
                    <span class=""> > {{moduleTest.score}} % </span>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex pb-4 align-items-center">
        <h2 class="lms-h2"> <span class="text-uppercase">{{'userFrontManagement.module.title_m'|trans}} : </span> {{moduleTest.module.title}}</h2>
    </div>

    <div class="d-flex align-items-center lms-question-type">
        <div class=" lms-question-type-badge">
            {% if moduleTest.test.typeTest.conditional == 'pretest' %}
                <img src="{{asset('images/core/badge-jaune.svg')}}" alt="{{moduleTest.test.typeTest.title}}"/>
            {% elseif moduleTest.test.typeTest.conditional == 'training' %}
                <img src="{{asset('images/core/badge-vert.svg')}}" alt="{{moduleTest.test.typeTest.title}}"/>
            {% elseif moduleTest.test.typeTest.conditional == 'eval' %}
                <img src="{{asset('images/core/evaluation-top.svg')}}" alt="{{moduleTest.test.typeTest.title}}"/>
            {% endif %}
        </div>
        {% set questionIndex = userTest.lastIndexQuestion + 1 %}
        <div class=" lms-question-type-text">
            {{questionIndex}}/{{userTest.shuffleQuestions|length}} &ndash; {{moduleTest.test.typeTest.title}}
        </div>

    </div>

    <div class="lms-question-title">
        {% if question.title %}
            <h3 class="lms-h3">{{question.title|raw}}</h3>
        {% endif %}
        <h4 class="lms-h4">{{question.question|raw}}</h4>
    </div>

    <div class="row lms-question-bloc">
        {# CHRONOS #}
        {% if moduleTest.chronoTest == true and moduleTest.chronoQuestion == false %}
            <div class="col-md-4 col-xl-5 order-md-12 lms-test-timer" id="timer" {# data-user-test="{{userTest.id}}" data-path="{{path('test_front_chrono')}}"#} data-timer="{{userTest.getCurrentChronoSeconds()}}"></div>
        {% elseif moduleTest.chronoQuestion == true %}
            <div class="col-md-4 col-xl-5 order-md-12 lms-test-timer" id="timer-question" data-timer="{{moduleTest.getChronoQuestionTimeSeconds()}}"></div>
        {% endif %}

        <div class="col-md-8 col-xl-7 order-md-1 lms-question-question">
            <div class="lms-question-content">
                {{question.content|raw}}
            </div>
    
            <p class="lms-question-notice">
                {% if question.answerType.conditional == 'multiple' %}
                    {{'answer.notice_multiple'|trans}}
                {% elseif question.answerType.conditional == 'unique' %}
                    {{'answer.notice_unique'|trans}}
                {% elseif question.answerType.conditional == 'text' %}
                    {{ 'answer.notice_text'|trans }}
                {% elseif question.answerType.conditional == 'graduation' %}
                    {{ 'answer.notice_graduation'|trans }}
                {% endif %}
            </p>
    
            <div id="data" data-duration-path="{{ path('test_front_duration') }}" data-chrono-path="{{ path('test_front_chrono') }}" data-question="{{ question.id }}" data-user="{{userTest.user.id}}" data-formation="{{formationPath.slug}}" data-session="{{currentSession.slug}}" data-module="{{module.slug}}" data-test="{{userTest.test.slug}}" data-user-test="{{userTest.id}}" >
                {% if question.answerType.conditional == 'multiple' %}
                    <ul id="multiple" data-path="{{path('test_front_answer_multiple')}}">
                        {% for answer in answers %}
                            <li>
                                <input class="answers" id="answer-{{answer.id}}" type="checkbox">
                                <label for="answer-{{answer.id}}">{{answer.content|raw}}</label>
                            </li>
                        {% endfor %}
                    </ul>
                {% elseif question.answerType.conditional == 'unique' %}
                    <ul id="unique" data-path="{{path('test_front_answer_unique')}}">
                        {% for answer in answers %}
                            <li>
                                <input class="answers" id="answer-{{answer.id}}" name="unique-{{question.id}}" type="radio">
                                <label for="answer-{{answer.id}}">{{ answer.content | trim | raw }}</label>
                            </li>
                        {% endfor %}
                    </ul>
                {% elseif question.answerType.conditional == 'graduation' %}
                    <ul class="row" id="graduation" data-path="{{path('test_front_answer_text_gradutation')}}">
                        <input class="col-9" id="graduateValue"  type="range" min="0" max="10" list="tickmarks" value="5">
                        <input class="col-1 ml-2 w-2 answers" type="textarea " id='rangeValu' name="text-{{question.id}}" value="5" disabled = "disabled">
                        <datalist id="tickmarks">
                            <option value="0" label="0">
                            <option value="1">
                            <option value="2">
                            <option value="3">
                            <option value="4">
                            <option value="5" label="5">
                            <option value="6">
                            <option value="7">
                            <option value="8">
                            <option value="9">
                            <option value="10" label="10">
                        </datalist>
                    </ul>
                {% elseif question.answerType.conditional == 'text' %}
                    <ul id="text" data-path="{{path('test_front_answer_text_gradutation')}}">
                        <textarea class="answers w-100" id="textanswer" name="text-{{question.id}}"></textarea>    
                    </ul>
                {% endif %}
            </div>
        </div>
    </div>

    <div class="row justify-content-around my-5">
        {% if moduleTest.test.typeTest.conditional == 'training' %}
            <a class="lms-button lms-button-gray" href="{{path('test_front_quit', {'sessionSlug' : currentSession.slug, 'moduleSlug' : module.slug, 'testSlug' : moduleTest.test.slug})}}">{{'test.quit'|trans}}</a>
        {% endif %}

        {% if question.answerType.conditional == 'multiple' %}
            <a class="multiple lms-button lms-button-blue" href="#" id="submit"><i class="material-icons lms-material-icons">save</i> {{'global.submit'|trans}}</a>
        {% elseif question.answerType.conditional == 'unique' %}
            <a class="unique lms-button lms-button-blue" href="#" id="submit"><i class="material-icons lms-material-icons">save</i> {{'global.submit'|trans}}</a>
         {% elseif question.answerType.conditional == 'graduation' %}
            <a class="graduation lms-button lms-button-blue" href="#" id="submit"><i class="material-icons lms-material-icons">save</i> {{'global.submit'|trans}}</a>
         {% elseif question.answerType.conditional == 'text' %}
            <a class="text lms-button lms-button-blue" href="#" id="submit"><i class="material-icons lms-material-icons">save</i> {{'global.submit'|trans}}</a>
        {% endif %}
    </div>
{% endblock %}

{% block js %}
    {{parent()}}
    <script src="{{ asset('js/TimeCircles.js') }}"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var answerJSON = {};
            var answerArray = [];
            var interval;

            {# expose moins de js code #}
            {% if question.answerType.conditional == 'graduation' %}
                if($('#submit').hasClass('graduation')){
                    document.getElementById("graduateValue").addEventListener('change',function(){
                        document.getElementById("rangeValu").value = document.getElementById("graduateValue").value;
                    });
                }
            {% endif %}

            // answer submit
            $('#submit').on('click', function (event) {                
                event.preventDefault();
                clearInterval(interval);
                $('.spinner').fadeIn();

                {% if moduleTest.chronoTest == true and moduleTest.chronoQuestion == false %}
                    if ($('#timer').length) {
                        $('#timer').TimeCircles().stop();
                    }                         
                {% elseif moduleTest.chronoQuestion == true %}     
                    if ($('#timer-question').length) {
                        $('#timer-question').TimeCircles().stop();
                    }
                {% endif %}
                
                {% if question.answerType.conditional == 'unique' %}
                    // UNIQUE
                    if ($(this).hasClass('unique')) {
                        if ($('.answers:checked').length > 0) {
                            var answer = $('.answers:checked').attr('id').replace('answer-', '')
                        } else {
                            var answer = 0
                        }
                        answerJSON = {
                            'sessionSlug': $('#data').attr('data-session'),
                            'formationPathSlug': $('#data').attr('data-formation'),
                            'moduleSlug': $('#data').attr('data-module'),
                            'testSlug': $('#data').attr('data-test'),
                            'user': $('#data').attr('data-user'),
                            'question': $('#data').attr('data-question'),
                            'answer': answer
                        };
                        var url = location.href.split('?');
                        $.ajax({method: 'post', url: $('#unique').attr('data-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(answerJSON)}).done(function (response) {
                            if (response == 'success') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-icon.sa-success').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else if (response == 'fail') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-error').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else {
                                window.location.href = response;
                            }
                        }).fail(function (jxh, textmsg, errorThrown) {
                            $('.spinner').fadeOut();
                        });
                        
                    } 
                {% elseif question.answerType.conditional == 'multiple' %}    
                    // MULTIPLE
                    if ($(this).hasClass('multiple')) {
                        $('.answers:checked').each(function () {
                            answerArray.push($(this).attr('id').replace('answer-', ''));
                        });
                        answerJSON = {
                            'sessionSlug': $('#data').attr('data-session'),
                            'formationPathSlug': $('#data').attr('data-formation'),
                            'moduleSlug': $('#data').attr('data-module'),
                            'testSlug': $('#data').attr('data-test'),
                            'user': $('#data').attr('data-user'),
                            'question': $('#data').attr('data-question'),
                            'answers': answerArray
                        };
                        var url = location.href.split('?');
                        $.ajax({method: 'post', url: $('#multiple').attr('data-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(answerJSON)}).done(function (response) {
                            if (response == 'success') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-icon.sa-success').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else if (response == 'fail') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-error').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else {
                                window.location.href = response;
                            }
                        }).fail(function (jxh, textmsg, errorThrown) {
                            $('.spinner').fadeOut();
                        })
                    } 
                {% elseif question.answerType.conditional == 'graduation' %} 
                    if ($(this).hasClass('graduation')) {
                        answerJSON = {
                            'sessionSlug': $('#data').attr('data-session'),
                            'formationPathSlug': $('#data').attr('data-formation'),
                            'moduleSlug': $('#data').attr('data-module'),
                            'testSlug': $('#data').attr('data-test'),
                            'user': $('#data').attr('data-user'),
                            'question': $('#data').attr('data-question'),
                            'answers': $('#rangeValu').val()
                        };
                        var url = location.href.split('?');
                        $.ajax({method: 'post', url: $('#graduation').attr('data-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(answerJSON)}).done(function (response) {
                            if (response == 'success') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-icon.sa-success').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else if (response == 'fail') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-error').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else {
                                window.location.href = response;
                            }
                        }).fail(function (jxh, textmsg, errorThrown) {
                            $('.spinner').fadeOut();
                        })
                    } 
                {% elseif question.answerType.conditional == 'text' %} 
                    if ($(this).hasClass('text')) {
                        answerJSON = {
                            'sessionSlug': $('#data').attr('data-session'),
                            'formationPathSlug': $('#data').attr('data-formation'),
                            'moduleSlug': $('#data').attr('data-module'),
                            'testSlug': $('#data').attr('data-test'),
                            'user': $('#data').attr('data-user'),
                            'question': $('#data').attr('data-question'),
                            'answers': $('#textanswer').val()
                        };
                        var url = location.href.split('?');
                        $.ajax({method: 'post', url: $('#text').attr('data-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(answerJSON)}).done(function (response) {
                            if (response == 'success') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-icon.sa-success').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else if (response == 'fail') {
                                $('.spinner .sk-folding-cube').addClass('hide');
                                $('.spinner .sa-error').removeClass('hide');
                                setTimeout(function () {
                                    //location.reload();
                                    location.replace(url[0] + "?" + Math.random());
                                }, 2000);
                            } else {
                                window.location.href = response;
                            }
                        }).fail(function (jxh, textmsg, errorThrown) {
                            $('.spinner').fadeOut();
                        })
                    }
                {% endif %}    
            });
            
            {% if moduleTest.chronoTest == true and moduleTest.chronoQuestion == false %}
                // chrono test
                if ($('#timer').length) {
                    $('#timer').TimeCircles({
                        animation_interval: "smooth",
                        count_past_zero: false,
                        time: {
                            Days: {
                                show: false
                            },
                            Hours: {
                                show: false
                            },
                            Minutes: {
                                text: ''
                            },
                            Seconds: {
                                text: ''
                            }
                        }
                    }).addListener(function (unit, amount, total) {
                            if (total == 0) {
                                $(".spinner").show();                                 
                                clearInterval(interval);
                                var dataJSON = {
                                    'userTestID': $('#data').attr('data-user-test'),
                                    'seconds': parseInt($('#timer').TimeCircles().getTime()),
                                    'sessionSlug': $('#data').attr('data-session'),
                                    'moduleSlug': $('#data').attr('data-module')
                                };
                                $.ajax({method: 'post', url: $('#data').attr('data-chrono-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(dataJSON)})
                                    .done(function (response) {
                                                 if (response != 'OK') {
                                                     window.location = response;
                                                 }         
                                            }).fail(function (jxh, textmsg, errorThrown) {});                               
                            }
                        })
                    ;
                } 
            {% elseif moduleTest.chronoQuestion == true %}    
                // chrono question
                if ($('#timer-question').length) {
                    $('#timer-question').TimeCircles({
                        animation_interval: "smooth",
                        count_past_zero: false,
                        time: {
                            Days: {
                                show: false
                            },
                            Hours: {
                                show: false
                            },
                            Minutes: {
                                text: ''
                            },
                            Seconds: {
                                text: ''
                            }
                        }
                    }).addListener(function (unit, amount, total) {
                        if (total == 0) {
                            $('#submit').trigger('click');
                        }
                    });
                }
            {% endif %}
                
            {% if moduleTest.chronoTest == true and moduleTest.chronoQuestion == false %}         

                interval = setInterval(function () {
                    var dataJSON = {
                        'userTestID': $('#data').attr('data-user-test'),
                        'seconds': parseInt($('#timer').TimeCircles().getTime()),
                        'sessionSlug': $('#data').attr('data-session'),
                        'moduleSlug': $('#data').attr('data-module')
                    };                    
                    $.ajax({method: 'post', url: $('#data').attr('data-chrono-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(dataJSON)})
                            .done(function (response) {}).fail(function (jxh, textmsg, errorThrown) {});
                        }, 10000);            
            {% else %}
                var dataJSON = {
                    'testSlug': $('#data').attr('data-test'),
                    'user': $('#data').attr('data-user')
                };
                interval = setInterval(function () {
                    //console.log("ici");
                    $.ajax({method: 'post', url: $('#data').attr('data-duration-path'), contentType: 'application/json; charset=utf-8', data: JSON.stringify(dataJSON)})
                            .done(function (response) {}).fail(function (jxh, textmsg, errorThrown) {});
                        }, 10000);
            {% endif %}    
        });
    </script>

{% endblock %}